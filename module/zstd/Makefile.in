src = @abs_top_srcdir@/module/zstd
obj = @abs_builddir@

MODULE := zzstd

obj-$(CONFIG_ZFS) := $(MODULE).o

asflags-y += $(ZFS_MODULE_CFLAGS)
ccflags-y := $(ZFS_MODULE_CFLAGS) $(ZFS_MODULE_CPPFLAGS)

# Suppress unused but set variable warnings often due to ASSERTs
ccflags-y += $(NO_UNUSED_BUT_SET_VARIABLE)
ccflags-y += -Wframe-larger-than=2048 -O3

$(MODULE)-objs += common/zstd_common.o
$(MODULE)-objs += common/fse_decompress.o
$(MODULE)-objs += common/entropy_common.o
$(MODULE)-objs += common/xxhash.o
$(MODULE)-objs += compress/hist.o
$(MODULE)-objs += compress/zstd_compress.o
$(MODULE)-objs += compress/zstd_compress_literals.o
$(MODULE)-objs += compress/zstd_compress_sequences.o
$(MODULE)-objs += compress/fse_compress.o
$(MODULE)-objs += compress/huf_compress.o
$(MODULE)-objs += compress/zstd_double_fast.o
$(MODULE)-objs += compress/zstd_fast.o
$(MODULE)-objs += compress/zstd_lazy.o
$(MODULE)-objs += compress/zstd_ldm.o
$(MODULE)-objs += compress/zstd_opt.o
$(MODULE)-objs += decompress/zstd_ddict.o
$(MODULE)-objs += decompress/zstd_decompress.o
$(MODULE)-objs += decompress/zstd_decompress_block.o
$(MODULE)-objs += decompress/huf_decompress.o
$(MODULE)-objs += zstd.o

CFLAGS_decompress/zstd_decompress_block.o	:= =-fno-tree-vectorize

ZSTD_DIRS = \
	common \
	compress \
	decompress

all:
	mkdir -p $(ZSTD_DIRS)
